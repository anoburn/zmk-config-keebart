/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,physical-layout = &default_layout; };
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_right_f {
            bindings = <&kp F>;
            key-positions = <9 10>;
        };

        combo_right_g {
            bindings = <&kp G>;
            key-positions = <10 11>;
        };

        combo_right_j {
            bindings = <&kp J>;
            key-positions = <11 12>;
        };

        combo_right_v {
            bindings = <&kp V>;
            key-positions = <10 12>;
        };

        combo_right_y {
            bindings = <&kp Z>;
            key-positions = <9 11>;
        };

        combo_right_w {
            bindings = <&kp W>;
            key-positions = <9 12>;
        };

        combo_right_z {
            bindings = <&kp Y>;
            key-positions = <9 10 11 12>;
        };

        combo_right_c {
            bindings = <&kp C>;
            key-positions = <23 24>;
        };

        combo_right_u {
            bindings = <&kp U>;
            key-positions = <24 25>;
        };

        combo_right_n {
            bindings = <&kp N>;
            key-positions = <25 26>;
        };

        combo_right_h {
            bindings = <&kp H>;
            key-positions = <23 25>;
        };

        combo_right_k {
            bindings = <&kp K>;
            key-positions = <24 26>;
        };

        combo_right_b {
            bindings = <&kp B>;
            key-positions = <23 26>;
        };

        combo_right_d {
            bindings = <&kp D>;
            key-positions = <9 10 11>;
        };

        combo_right_x {
            bindings = <&kp X>;
            key-positions = <10 11 12>;
        };

        combo_right_q {
            bindings = <&kp Q>;
            key-positions = <9 11 12>;
        };

        combo_right_p {
            bindings = <&kp P>;
            key-positions = <23 25 26>;
        };

        combo_right_l {
            bindings = <&kp L>;
            key-positions = <23 24 25>;
        };

        combo_right_m {
            bindings = <&kp M>;
            key-positions = <24 25 26>;
        };

        combo_right_ae {
            bindings = <&kp APOSTROPHE>;
            key-positions = <23 10 11>;
        };

        combo_right_oe {
            bindings = <&kp SEMI>;
            key-positions = <23 11 12>;
        };

        combo_right_ue {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <23 10 12>;
        };

        combo_right_sz {
            bindings = <&kp MINUS>;
            key-positions = <23 11>;
        };

        combo_right_space {
            bindings = <&kp SPACE>;
            key-positions = <23 24 25 26>;
        };

        combo_right_sch {
            bindings = <&m_sch>;
            key-positions = <23 10 25 26>;
        };

        combo_right_dot {
            bindings = <&kp KP_DOT>;
            key-positions = <9 24>;
        };

        combo_right_colon {
            bindings = <&kp COLON>;
            key-positions = <9 24 25>;
        };

        combo_right_comma {
            bindings = <&kp KP_COMMA>;
            key-positions = <9 25>;
        };

        combo_right_semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <9 25 26>;
        };

        combo_right_minus {
            bindings = <&kp KP_MINUS>;
            key-positions = <9 26>;
        };

        combo_right_underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <9 24 26>;
        };

        combo_right_apostrophe {
            bindings = <&kp SQT>;
            key-positions = <11 26>;
        };

        combo_right_dquotes {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <10 26>;
        };

        combo_right_backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <23 10>;
        };

        combo_right_delete {
            bindings = <&kp DELETE>;
            key-positions = <10 25>;
        };

        combo_right_escape {
            bindings = <&kp ESCAPE>;
            key-positions = <9 10 26>;
        };

        combo_right_shift {
            bindings = <&mt LSHIFT LSHIFT>;
            key-positions = <23 10 11 12>;
        };

        combo_right_shiftlock {
            bindings = <&kt LEFT_SHIFT>;
            key-positions = <9 24 25 26>;
        };

        combo_right_ctrl {
            bindings = <&none>;
            key-positions = <12 23>;
        };

        combo_right_gui {
            bindings = <&none>;
            key-positions = <24 12>;
        };

        combo_right_alt {
            bindings = <&none>;
            key-positions = <25 12>;
        };

        combo_right_enter {
            bindings = <&kp KP_ENTER>;
            key-positions = <9 23>;
        };

        combo_right_shift_enter {
            bindings = <&kp LS(KP_ENTER)>;
            key-positions = <23 9 12>;
        };

        combo_right_tab {
            bindings = <&kp TAB>;
            key-positions = <10 24>;
        };

        combo_right_exclamation {
            bindings = <&kp EXCLAMATION>;
            key-positions = <11 25>;
        };

        combo_right_question {
            bindings = <&kp QUESTION>;
            key-positions = <12 26>;
        };

        combo_right_bt_clear_profile {
            bindings = <&bt BT_CLR>;
            key-positions = <10 11 24 25>;
        };
    };

    macros {
        m_sch: m_sch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp C &kp H>;
            label = "M_SCH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |  MUTE |  PP   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |  LALT |  RALT |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |               |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |               | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T      &kp C_MUTE  &kp C_PP  &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G      &kp LALT    &kp RALT  &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B                            &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &mo 1  &kp SPACE                        &kp RET  &mo 2  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN &inc_dec_kp C_PREV C_NEXT &inc_dec_kp C_BRI_DN C_BRI_UP>;
        };

        ardux_layer {
            display-name = "ARDUX";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5    |  LCTRL | RCTRL |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | CTRL | BT1 | BT2 | BT3 | BT4 | BT5   |  LALT  | RALT  | LFT | DWN |  UP | RGT |     |      |
            // | SHFT | BTCR| RGB | RST | BOOT| Unlock|        |       |     |     |     |     |     |      |
            //                    | GUI |     | SPC   |        | ENT   |     | ALT |

            bindings = <
&kp TAB    &kp N1        &kp N2           &kp N3        &kp N4        &kp N5          &kp LCTRL  &none  &lt 4 A   &kp R   &lt 7 T    &lt 2 O      &none   &none
&kp LCTRL  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LALT   &none  &lt 3 E   &kp S   &lt 8 I    &lt 5 SPACE  &trans  &trans
&kp LSHFT  &bt BT_CLR    &rgb_ug RGB_TOG  &sys_reset    &bootloader   &studio_unlock                    &trans    &trans  &trans     &trans       &trans  &trans
                                          &kp LGUI      &trans        &kp SPACE                         &kp LGUI  &trans  &kp SPACE
            >;
        };

        number_layer {
            display-name = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  | LCTRL | RCTRL |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |  LALT | RALT  |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |               |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |               | ENT |     | ALT |

            bindings = <
&none  &none  &kp N3  &kp N2  &kp N1  &none   &none  &none  &none   &kp N1  &kp N2  &kp N3  &none  &none
&none  &none  &kp N6  &kp N5  &kp N4  &none   &none  &none  &none   &kp N4  &kp N5  &kp N6  &none  &none
&none  &none  &none   &none   &none   &none                 &none   &none   &none   &none   &none  &none
                      &trans  &trans  &trans                &trans  &trans  &trans
            >;
        };

        symbol_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        paren_layer {
            display-name = "PAREN";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        nav_layer {
            display-name = "NAV";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        bt_layer {
            display-name = "BT";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        media_layer {
            display-name = "MEDIA";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        copy_layer {
            display-name = "COPY";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        big_sym_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;

            label = "BIG_SYM";
        };

        big_function_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;

            label = "BIG_FUNC";
        };
    };
};
